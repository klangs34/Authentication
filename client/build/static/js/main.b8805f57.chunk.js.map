{"version":3,"sources":["components/login/login.js","components/createAccount/createAccount.js","components/memberProfile/memberProfile.js","App.js","serviceWorker.js","index.js"],"names":["SignIn","props","useState","email","setEmail","password","setPassword","displayError","setDisplayError","isLoggedIn","setIsLoggedIn","flashLogin","setFlashLogin","display","setDisplay","useEffect","localStorage","getItem","className","to","href","onClick","e","preventDefault","setItem","setTimeout","history","push","role","htmlFor","type","id","aria-describedby","value","onChange","target","axios","post","then","data","token","catch","err","response","error","message","CreateAccount","test","emailValid","console","log","MemberProfile","testToken","username","setUsername","firstName","setFirstName","lastName","setLastName","salutation","setSalutation","occupation","setOccupation","get","headers","Authorization","res","handleOnChange","name","placeholder","put","App","path","component","Signin","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b8805f57.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst SignIn = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [displayError, setDisplayError] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [flashLogin, setFlashLogin] = useState(false);\n  const [display, setDisplay] = useState(false);\n\n  useEffect(() => {\n    localStorage.getItem(\"jwtToken\") &&\n    localStorage.getItem(\"jwtToken\") !== \"\" &&\n    setIsLoggedIn(true);\n  }, []);\n\n  const handleSignin = (e) => {\n    e.preventDefault();\n    setDisplayError(\"\");\n\n    axios\n      .post(\"/api/login\", { email, password })\n      .then((data) => {\n        setDisplayError(\"\");\n        localStorage.setItem(\"jwtToken\", data.data.token);\n        setFlashLogin(true);\n        setIsLoggedIn(true);\n      })\n      .catch((err) => {\n        //console.log(err);\n        setDisplayError(err.response.data.error.message);\n      });\n  };\n\n  const handleLogout = (e) => {\n    e.preventDefault();\n    localStorage.setItem(\"jwtToken\", \"\");\n    setDisplay(true);\n    setTimeout(() => {\n      props.history.push(\"/\");\n    }, 1200);\n  };\n\n  return (\n    <>\n      <nav className=\"navbar navbar-light bg-light\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          Spaceship\n        </Link>\n        {isLoggedIn ? (\n          <>\n            <Link to=\"/member-profile\" className=\"ml-auto\">\n              Profile\n            </Link>\n            <a className=\"nav-link\" href=\"/\" onClick={handleLogout}>\n              Logout\n            </a>\n          </>\n        ) : (\n          <Link to=\"/create-account\">Create Account</Link>\n        )}\n      </nav>\n      <div className=\"container\">\n        {displayError && (\n          <div className=\"alert alert-danger mt-2\" role=\"alert\">\n            {displayError}\n          </div>\n        )}\n        {flashLogin && (\n          <div className=\"alert alert-success mt-2\" role=\"alert\">\n            Login Successful!\n          </div>\n        )}\n        {display && (\n          <div className=\"alert alert-success mt-2\" role=\"alert\">\n            Logout Successful!\n          </div>\n        )}\n        <form>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleInputEmail1\">Email Address</label>\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              id=\"exampleInputEmail1\"\n              aria-describedby=\"emailHelp\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleInputPassword1\">Password</label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              id=\"exampleInputPassword1\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </div>\n          <button\n            onClick={handleSignin}\n            type=\"submit\"\n            className=\"btn btn-primary\"\n          >\n            Sign in\n          </button>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default SignIn;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst CreateAccount = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [displayError, setDisplayError] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [flashLogin, setFlashLogin] = useState(false);\n  const [display, setDisplay] = useState(false);\n\n  useEffect(() => {\n    localStorage.getItem(\"jwtToken\") &&\n      localStorage.getItem(\"jwtToken\") !== \"\" &&\n      setIsLoggedIn(true);\n  }, []);\n\n  const emailValid = (email) => {\n    const emailRegex = /^([A-Za-z0-9_\\-.+])+@([A-Za-z0-9_\\-.])+\\.([A-Za-z]{2,})$/;\n    return emailRegex.test(email);\n  };\n\n  const handleSignup = (e) => {\n    e.preventDefault();\n\n    if (!emailValid(email)) {\n      setDisplayError(\"Invalid email format\");\n      return;\n    }\n\n    axios\n      .post(\"/api/create-account\", { email, password })\n      .then((data) => {\n        setDisplayError(\"\");\n        localStorage.setItem(\"jwtToken\", data.data.token);\n        setFlashLogin(true);\n        setIsLoggedIn(true);\n      })\n      .catch((err) => {\n        console.log(err.response.data.error.message);\n        setDisplayError(err.response.data.error.message);\n      });\n  };\n\n  const handleLogout = (e) => {\n    e.preventDefault();\n    localStorage.setItem(\"jwtToken\", \"\");\n    setDisplay(true);\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <>\n      <nav className=\"navbar navbar-light bg-light\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          Spaceship\n        </Link>\n        {isLoggedIn ? (\n          <>\n            <Link to=\"/member-profile\" className=\"ml-auto\">\n              Profile\n            </Link>\n            <a className=\"nav-link\" href=\"/\" onClick={handleLogout}>\n              Logout\n            </a>\n          </>\n        ) : (\n          <Link to=\"/login\">Login</Link>\n        )}\n      </nav>\n      <div className=\"container\">\n        <form>\n          {displayError && (\n            <div className=\"alert alert-danger mt-2\" role=\"alert\">\n              {displayError}\n            </div>\n          )}\n          {flashLogin && (\n            <div className=\"alert alert-success mt-2\" role=\"alert\">\n              Account Created Successfully!\n            </div>\n          )}\n          {display && (\n            <div className=\"alert alert-success mt-2\" role=\"alert\">\n              Logout Successful!\n            </div>\n          )}\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleInputEmail1\">Email Address</label>\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              id=\"exampleInputEmail1\"\n              aria-describedby=\"emailHelp\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleInputPassword1\">Password</label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              id=\"exampleInputPassword1\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </div>\n          <button\n            onClick={handleSignup}\n            type=\"submit\"\n            className=\"btn btn-primary\"\n          >\n            Create account\n          </button>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default CreateAccount;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst MemberProfile = (props) => {\n    const testToken = localStorage.getItem('jwtToken');\n\n    if((!testToken || testToken === \"\"))  {\n        props.history.push('/login');\n    }\n\n    const token = localStorage.getItem('jwtToken');\n\n    const [username, setUsername] = useState(\"\");\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [salutation, setSalutation] = useState(\"\");\n    const [occupation, setOccupation] = useState(\"\");\n    const [email, setEmail ] = useState(\"\");\n    const [display, setDisplay] = useState(false);\n\n    useEffect(() => {\n        axios.get('/api/member-profile',\n            {\n                headers: {\n                Authorization: `Bearer ${token}`\n                    }\n            })\n        .then(res => {\n            setUsername(res.data.username);\n            setFirstName(res.data.firstName);\n            setLastName(res.data.lastName);\n            setSalutation(res.data.salutation);\n            setOccupation(res.data.occupation);\n            setEmail(res.data.email);\n        })\n    }, []);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        axios.put('/api/update-member-info', {\n            username,\n            firstName,\n            lastName,\n            salutation,\n            occupation,\n            email\n        }, \n        {headers: {\n            Authorization: `Bearer ${token}`\n        }}).then(res => {\n            setUsername(res.data.username)\n            setFirstName(res.data.firstName)\n            setLastName(res.data.lastName)\n            setSalutation(res.data.salutation)\n            setOccupation(res.data.occupation)\n            setEmail(res.data.email)\n        })\n    }\n\n    const handleOnChange = (e)=> {\n        e.preventDefault();\n        setDisplay(false);\n        if (e.target.name === \"username\")\n        {\n            setUsername(e.target.value);\n        }\n        if (e.target.name === \"firstName\")\n        {\n            setFirstName(e.target.value);\n        }\n        if (e.target.name === \"lastName\")\n        {\n            setLastName(e.target.value);\n        }\n        if (e.target.name === \"salutation\")\n        {\n            setSalutation(e.target.value);\n        }\n        if (e.target.name === \"occupation\")\n        {\n            setOccupation(e.target.value);\n        }\n    }\n\n    const handleLogout = (e) => {\n        e.preventDefault();\n        localStorage.setItem('jwtToken', '');\n        setDisplay(true);\n        setTimeout(() => {\n           props.history.push('/');\n        }, 1200)\n    }\n\n    return (\n        <>\n        <nav className=\"navbar navbar-light bg-light\">\n            <Link to=\"/\" className=\"navbar-brand\">Spaceship</Link>\n            <Link to=\"/\" className=\"ml-auto\">Home</Link>\n            <a className=\"nav-link\" href=\"/\" onClick={handleLogout}>Logout</a>\n        </nav>\n        <div className=\"container\">\n            <form>\n                {display && \n                <div className=\"alert alert-success\" role=\"alert\">\n                    Logout Successful!\n                </div>\n                }\n                <div className=\"form-row\">\n                    <div className=\"form-group col-md-6\">\n                    <label htmlFor=\"username\">Username</label>\n                    <input value={username} type=\"text\" className=\"form-control\" name=\"username\" id=\"username\" onChange={handleOnChange} placeholder=\"Username\" />\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"firstName\">First Name</label>\n                    <input value={firstName} type=\"text\" className=\"form-control\" name=\"firstName\" id=\"firstName\" onChange={handleOnChange} placeholder=\"First Name\" />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"lastName\">Last Name</label>\n                    <input value={lastName} type=\"text\" className=\"form-control\" name=\"lastName\" id=\"lastName\" onChange={handleOnChange} placeholder=\"Last Name\" />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"occupation\">Occupation</label>\n                    <input value={occupation} type=\"text\" className=\"form-control\" name=\"occupation\" id=\"occupation\" onChange={handleOnChange} />\n                </div>\n                <div className=\"form-row\">\n                    <div className=\"form-group col-md-4\">\n                    <label htmlFor=\"salutation\">Salutation</label>\n                    <select name=\"salutation\" id=\"salutation\" className=\"form-control\" value={salutation} onChange={handleOnChange}>\n                        <option>Choose...</option>\n                        <option>Mr.</option>\n                        <option>Mrs.</option>\n                        <option>Ms.</option>\n                    </select>\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <div className=\"form-check\">\n                    <input className=\"form-check-input\" type=\"checkbox\" name=\"subscribe\" id=\"subscribe\" />\n                    <label className=\"form-check-label\" htmlFor=\"subscribe\">\n                        subscribe to weekly updates\n                    </label>\n                    </div>\n                </div>\n                <button onClick={handleSubmit} className=\"btn btn-primary\">Submit</button>\n            </form>\n        </div>\n        </>\n    )\n}\nexport default MemberProfile;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Signin from './components/login/login';\nimport CreateAccount from './components/createAccount/createAccount';\nimport MemberProfile from './components/memberProfile/memberProfile';\n\nfunction App() {\n  return (\n    <div>\n      <Switch>\n        <Route path='/login' component={Signin} />\n        <Route path='/create-account' component={CreateAccount} />\n        <Route path='/member-profile' component={(props) => <MemberProfile {...props} /> } />\n        <Route exact path='/' component={CreateAccount}/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n//import './index.css';\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}